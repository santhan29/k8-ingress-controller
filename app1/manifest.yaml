apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1 
  labels:    #replica set labels
    name: app1 
    tier: frontend 
spec:
  # modify replicas according to your case
  replicas: 1
  selector:
    matchLabels:  #these are used to select the pod to create replicas
      name: app1 
      tier: frontend 
  template:   #this is pod template
    metadata:
      labels:  #these labels belongs to pod 
        name: app1 
        tier: frontend 
    spec:
      containers:
      - name: app1 
        image: santhan29/app1:v1 
---
kind: Service
apiVersion: v1
metadata:
 name: app1 
spec: 
  selector:
    name: app1 
    tier: frontend 
  ports:
    - name: nginx-service-port
      protocol: TCP
      port: 80  #service port
      targetPort: 80 #container port 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: echoserver
    annotations:
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/tags: Environment=dev,Team=test 
        alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:361769595563:certificate/593d6792-94a3-44e1-b7f3-7124a20f1303 
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]' 
        alb.ingress.kubernetes.io/group.name: expense 
        kubernetes.io/ingress.class: alb 
spec:
    rules:
    - host: "app1.aws81s.store" 
      http:
        paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: app1 
              port:
                number: 80 